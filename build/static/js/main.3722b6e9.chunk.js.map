{"version":3,"sources":["utils/axiosCalls.js","components/header/toDoHeader.js","components/ueberschrift/bereichUeberschrift.js","components/liste/listItem/listElement.js","components/liste/containerListe.js","utils/localStorageCalls.js","components/App.js","utils/localStorageIdService.js","index.js"],"names":["require","config","ToDoHeader","props","className","initialValues","todopunkt","validate","values","errors","console","log","test","onSubmit","setSubmitting","handleSubmit","finally","isSubmitting","type","name","id","placeholder","Button","BereichUeberschrift","ueberschrift","ListElement","useState","item","date","setDate","showM","setShowM","todoPunkt","titel","setTitel","undefined","notizen","notes","setNotes","strich","displayButton","displayColour","handleCloseWithoutSaving","Card","style","border","cursor","display","onClick","icon","faPen","Modal","show","onHide","Header","closeButton","Title","Body","onChange","e","target","value","itId","handleDate","Footer","variant","size","updatePunkt","updateDoneOrNot","toString","ContainerListe","itemList","Container","map","LocalStorageCalls","method","storage","object","localStorage","setItem","JSON","stringify","data","getItem","parse","App","split","trim","length","replace","datum","Date","toISOString","LocalStorageIdService","cPunkt","punkt","state","push","setState","punktErledigt","amount","bind","deleteAllDoneItems","this","backBoth","prevProps","prevState","snapshot","dataNotDone","dataDone","title","harken","i","a","indexOf","einkaufsPunkt","speicher","indexItem","indexItemErledigt","splice","updatePunktInState","updatePunktStrichDoneOrNot","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3722b6e9.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, {useState} from \"react\";\r\nrequire('dotenv').config()\r\n/**\r\n * Übernimmt die axios calls anhand der übergebenen parameter, und returnt das propmise / ergebnis\r\n * @param method\r\n * @param url\r\n * @param object\r\n * @returns {AxiosPromise}\r\n * @constructor\r\n */\r\nexport function AxiosCalls(method,url, object){\r\n\r\n\r\n    const firstHalfUrl = process.env.REACT_APP_URL;\r\n    console.log(`FirsthalfUrl: ${process.env.REACT_APP_URL}` );\r\n    const firstHalfUrlwithoutEnv = 'http://127.0.0.1:8081';\r\n   const call = axios({\r\n        method: method,\r\n        url: firstHalfUrl + url,\r\n        data: object,\r\n    })\r\n    return call;\r\n}","import {Button} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport \"./header.scss\";\r\nimport {ErrorMessage, Formik, Form, Field} from 'formik';\r\n\r\n\r\nexport function ToDoHeader(props){\r\n\r\n    /**\r\n     * Übergibt eingabe (Itemname) an props.handleSubmit\r\n     * @param event\r\n     */\r\n   \r\n\r\n    const onSubmit = (values, { setSubmitting}) => {\r\n        props.handleSubmit(values.todopunkt).finally( ()=> {\r\n            setSubmitting(false);\r\n        });\r\n\r\n    }\r\n    /**\r\n     * Überprüft ob die Eingaben korrekt sind, gibt Fehlermeldung aus wenn nicht\r\n     * @param values\r\n     * @returns {{}}\r\n     */\r\n    const validate = (values)=> {\r\n        const errors = {};\r\n        console.log(\"Values: \", values);\r\n        if(!values.todopunkt){\r\n            errors.todopunkt = \"To-do-Punk is needed\"\r\n        }\r\n         if (/[^a-zA-Z0-9 -]+/g.test(values.todopunkt)  ){\r\n            errors.todopunkt = 'Invalid To-do-Punk -> Keine Sonderzeichen';\r\n        }\r\n         if(!/[a-zA-Z]+/g.test(values.todopunkt) ){\r\n             errors.todopunkt = 'Mindestens ein Buchstabe'\r\n         }\r\n        return errors;\r\n    }\r\n\r\n    /**\r\n     * speichert veränderungen bei der eingabe onChange im state\r\n     * @param event\r\n     */\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <h1 className=\"ueberschrift\">Digitale To-do-Liste</h1>\r\n            <Formik initialValues={{todopunkt: \"\"}} validate={validate} onSubmit={onSubmit}>\r\n                {\r\n                    ({\r\n                        isSubmitting,\r\n                        errors,\r\n                        values,\r\n                    }) => (\r\n                        <Form className=\"row g-3 justify-content-center\" >\r\n                            <div className=\"col-auto\">\r\n                                <Field type=\"text\" name={\"todopunkt\"}  className=\"form-control\"  id=\"inp\" placeholder=\"To-do\"/>\r\n                                <ErrorMessage name={\"todopunkt\"} />\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <Button type=\"submit\" className=\"btn-secondary\">Hinzufügen</Button>\r\n                            </div>\r\n                           \r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport \"../../Styles.scss\";\r\n\r\nexport function BereichUeberschrift(props){\r\n\r\n    return(\r\n        <div className=\"d-flex justify-content-center\">\r\n            <p className=\"schrift mt-4\">\r\n                {props.ueberschrift}\r\n            </p>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\nimport React, {useState} from \"react\";\r\nimport {Col, Row, Card, Button, Modal} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPen} from '@fortawesome/free-solid-svg-icons';\r\nimport \"../../../Styles.scss\";\r\nimport \"../../App.scss\";\r\nimport {AxiosCalls} from \"../../../utils/axiosCalls\";\r\n\r\n/**\r\n * Generiert ein Listen element / Item / todopunkt mit den übergebenen werten\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport function ListElement(props) {\r\n\r\n    const [date, setDate] = useState(props.item.date);\r\n    const [showM, setShowM] = useState(false);\r\n   \r\n    const [titel, setTitel] = useState(props.item.todoPunkt)\r\n    const [notes, setNotes] = useState(props.item.notizen === undefined ? 'notizen' : props.item.notizen);\r\n    const [displayButton, setDisplayButton] = useState(props.item.strich ? \"none\" : \"visible\");\r\n    const [displayColour, setDisplayColour] = useState(props.item.strich);\r\n\r\n    /**\r\n     * Speichert die Anzahl onchange in den State\r\n     * @param e\r\n     */\r\n    const handleDate = (e) => {\r\n        //setAmount(e.target.value);\r\n        setDate(e.target.value);\r\n        console.log(\"nummber: \" + e + \"id: \" + props.item.itId);\r\n    }\r\n\r\n    /**\r\n     * Setzt im App state über props.updateDone ein Item auf erledigt\r\n     */\r\n    const todoErledigt = () => {\r\n        console.log(\"card or box klicked: \" + props.item.itId);\r\n        const ob = {\r\n            \"itId\": props.id,\r\n            \"todoPunkt\": \"platzhalterdatenloeschen\",\r\n            \"strich\": false,\r\n            \"date\": \"2022-07-11\"\r\n        }\r\n        props.updateDoneOrNot(props.id, props.item.strich);\r\n\r\n    }\r\n\r\n    /**\r\n     * Schließt Modal und speichert die änderungen im Localstorage (LocalStorageCalls) und im Frontend State (props.updatePunkt)\r\n     */\r\n    const handleClose = () => {\r\n        console.log(\"notizen: \" + notes);\r\n       const ob = {\r\n           \"itId\": props.item.itId,\r\n           \"todoPunkt\": titel,\r\n           \"strich\": false,\r\n           \"datum\": date,\r\n           \"notizen\": notes\r\n       }\r\n        props.updatePunkt(props.item.itId, titel, false, date, notes);\r\n        setShowM(false);\r\n    }\r\n\r\n    /**\r\n     * Schließt Modal nur, ohne zu speichernt, setzt Werte auf vorher zurück\r\n     */\r\n    const handleCloseWithoutSaving = () => {\r\n\r\n        setShowM(false);\r\n        setTitel(props.item.todoPunkt);\r\n        setNotes(props.item.notizen);\r\n        setDate(props.item.date);\r\n    }\r\n\r\n\r\n    const handleShow = () => setShowM(true);\r\n    const handleText = (e) => setTitel(e.target.value);\r\n    const handleNotes = (e) => setNotes(e.target.value)\r\n\r\n    return (\r\n        \r\n        <Card className=  {\"cardStyle \" + (displayColour ? 'cardColourGreen' : 'cardColourRed')}\r\n              style={{border: '3px', cursor: \"pointer\"}}\r\n              key={props.item.itId.toString()}>\r\n            <div className=\"buttonHull\">\r\n                <Button style={{display: displayButton}} onClick={handleShow}\r\n                        className=\"bearbeitungsButton\"><FontAwesomeIcon className=\"form-icon\" icon={faPen}/></Button>\r\n            </div>\r\n            <Modal show={showM} onHide={handleCloseWithoutSaving}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Bearbeite To-do-Punkt\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <div className=\"mb-3 row\">\r\n                            <label className=\"col-3 col-form-label\">To-do: </label>\r\n                            <div className=\"col-9\">\r\n                                <input className=\"form-control \" type=\"text\" onChange={handleText} value={titel}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row\">\r\n                            <label className=\"col-3 col-form-label\">Notizen: </label>\r\n                            <div className=\"col-9\">\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                       placeholder=\"Notizen\"\r\n                                       onChange={handleNotes}\r\n                                       value={notes}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label className=\" col-3 col-form-label\">Datum: </label>\r\n                            <div className=\"col-9\">\r\n                                <input className=\"form-control\" type=\"date\" value={date}\r\n                                       onChange={(e) => handleDate(e)}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer><Button variant=\"secondary\" size=\"sm\"\r\n                                      onClick={handleCloseWithoutSaving}>Abbrechen</Button>\r\n                    <Button variant=\"primary\" size=\"sm\" onClick={handleClose}>Änderung Speichern</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Card.Body onClick={(e) => todoErledigt()}>\r\n               \r\n                <div className=\"punktHull\">\r\n                    <p className=\"punkt\">{props.item.todoPunkt}</p> <p className=\"punktAmount\">{props.item.date}</p>\r\n                </div>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n","import {ListElement} from \"./listItem/listElement\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport \"../../Styles.scss\";\r\n\r\n/**\r\n * Rendert die To-dos\r\n * @param props = itemList, updatePunkt, updateDoneOrNot\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport function ContainerListe (props) {\r\n    console.log(\"ContainerListe: \", props.itemList);\r\n        let s = props.itemList;\r\n    return(\r\n        <Container className=\"container\">\r\n            <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-2 g-lg-3 reihe d-flex justify-content-evenly\">\r\n                \r\n                    {props.itemList.map((item) => <div className=\"col\"><ListElement item={item} id={item.itId}\r\n                                                                 updatePunkt={props.updatePunkt}\r\n                                                                 updateDoneOrNot={props.updateDoneOrNot}   /> </div>) }\r\n                \r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport function LocalStorageCalls(method, storage,object){\r\n\r\n    switch (method) {\r\n      case \"post\":\r\n        localStorage.setItem(storage, JSON.stringify(object))\r\n        break;\r\n      case \"get\":\r\n       let data = localStorage.getItem(storage)\r\n      return data = data ? JSON.parse(data): [];\r\n        break;\r\n      case \"delete\":\r\n        localStorage.setItem('punktErledigt', JSON.stringify([]));\r\n        break;\r\n      case \"put\":\r\n        localStorage.setItem('punkt', JSON.stringify(object));\r\n        break;\r\n    } \r\n}","import React, {useEffect} from \"react\";\r\nimport \"./App.scss\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {AxiosCalls} from \"../utils/axiosCalls\";\r\nimport {ToDoHeader} from \"./header/toDoHeader\";\r\nimport {BereichUeberschrift} from \"./ueberschrift/bereichUeberschrift\";\r\nimport {ContainerListe} from \"./liste/containerListe\";\r\nimport {LocalStorageIdService} from \"../utils/localStorageIdService\";\r\nimport {LocalStorageCalls} from \"../utils/localStorageCalls\";\r\n\r\n\r\n/**\r\n * Main Component\r\n * Rendert alle anderen Components\r\n */\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            punkt: [],\r\n            punktErledigt: [],\r\n            amount: '',\r\n            showM: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.deleteAllDoneItems = this.deleteAllDoneItems.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"start\");\r\n    \r\n        this.backBoth();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"Update: Punkt: \", this.state.punkt);\r\n        console.log(\"Update: PunktER: \", this.state.punktErledigt);\r\n    }\r\n\r\n\r\n\r\n    backBoth() {\r\n        let dataNotDone;\r\n        let dataDone;\r\n        dataNotDone = LocalStorageCalls('get', 'punkt');\r\n        dataDone = LocalStorageCalls('get', 'punktErledigt')      \r\n        console.log(\"backBoth: \", dataNotDone, dataDone);\r\n        this.setState({punkt: dataNotDone, punktErledigt: dataDone});\r\n    }\r\n\r\n\r\n    /**\r\n     * Man die eingabe konform, speichert im state und localStorage\r\n     * @param value = Der String der Eingegeben wurde\r\n     */\r\n\r\n    handleSubmit = (value) => {\r\n        if (value !== undefined) { \r\n            console.log(\"submitValue:\", value);\r\n            const trim = value.trim();\r\n            const split = trim.split(/(\\d+)/);\r\n            let anzahl;\r\n            console.log(\"anzahl Split: \", split[split.length -2]);\r\n        \r\n            let todoPunkt = split.toString();\r\n            todoPunkt = todoPunkt.trim();\r\n            todoPunkt = todoPunkt.replace(/,/g, '');\r\n            let date = new Date();\r\n            let datum =  date.toISOString().split('T')[0];\r\n\r\n            console.log(\"date: \", datum);\r\n            console.log(\"p: \" + todoPunkt);\r\n\r\n           let id = LocalStorageIdService();\r\n            console.log(\"loclastorageid2: \", id );\r\n            let cPunkt = {\r\n                \"itId\": id,\r\n                \"todoPunkt\": todoPunkt,\r\n                \"strich\": false,\r\n                \"date\": datum,\r\n            }\r\n\r\n            let punkt = [...this.state.punkt];\r\n                            punkt.push(cPunkt);\r\n              LocalStorageCalls('post', 'punkt', punkt);\r\n            this.setState({punkt: punkt});\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * Von child to parent component, Wird im Child  listElement aufgerufen und mit de übergeben werte wird im state in ein orbjekt geupdatet\r\n     * @param {number} id - id des objekts fürs localstorage /backend\r\n     * @param {string} title - todoPunkt (name des To-dos)\r\n     * @param  harken - sind die To-dos erledigt oder nicht\r\n     * @param {number} datum - Das Datum wann ein To-do erledigt werden soll\r\n     * @param {string} notizen - Notizen / bemerkungen\r\n     */\r\n    updatePunktInState(id, title, harken, datum, notizen) {\r\n        console.log(\"parameter: \" + id + \" \" + title + \" \" + datum + \" \" + notizen)\r\n        console.log(\"punkt \" + this.state.punkt[0]);\r\n        let punkt = [...this.state.punkt];\r\n        let i = punkt.map(a => a.itId).indexOf(id);\r\n        console.log(\"i: \" + i);\r\n        let cPunkt = {...punkt[id]};\r\n        cPunkt = {\r\n            \"itId\": id,\r\n            \"todoPunkt\": title,\r\n            \"strich\": harken,\r\n            \"date\": datum,\r\n            \"notizen\": notizen\r\n        }\r\n        punkt[i] = cPunkt;\r\n        LocalStorageCalls('post', 'punkt', punkt);\r\n        this.setState({punkt});\r\n        console.log(\"punktTest: \" + id + \" \" + this.state.punkt[i].itId, this.state.punkt[i].einkaufsPunkt, this.state.punkt[i].notizen);\r\n    }\r\n\r\n    /**\r\n     * Updated den state wenn ein Item verschoben wird von unerledigt zu erledigt und andersherum\r\n     * @param id\r\n     * @param harken = ist ein todo erledigt oder nicht\r\n     */\r\n    updatePunktStrichDoneOrNot(id, harken) {\r\n\r\n        console.log(\"harken: \" + harken);\r\n        let punkt = [...this.state.punkt];\r\n        let indexItem = punkt.map(a => a.itId).indexOf(id);\r\n        let punktErledigt = [...this.state.punktErledigt];\r\n        let indexItemErledigt = punktErledigt.map(a => a.itId).indexOf(id);\r\n        let speicher;\r\n        if (harken) {\r\n            speicher = punktErledigt[indexItemErledigt];\r\n            speicher.strich = false;\r\n            punktErledigt.splice(indexItemErledigt, 1);\r\n            punkt.push(speicher)\r\n        } else {\r\n            speicher = punkt[indexItem];\r\n            speicher.strich = true;\r\n            punkt.splice(indexItem, 1);\r\n            punktErledigt.push(speicher);\r\n        }\r\n       \r\n        LocalStorageCalls('post', 'punkt', punkt);\r\n        LocalStorageCalls('post', 'punktErledigt', punktErledigt);\r\n        this.setState({punkt: punkt, punktErledigt: punktErledigt});\r\n    }\r\n\r\n    /**\r\n     *  Löscht alle erledigten Items / To-dos\r\n     */\r\n    deleteAllDoneItems() {\r\n        LocalStorageCalls('delete')\r\n        this.setState({punktErledigt: []});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <ToDoHeader handleSubmit={(value) => this.handleSubmit(value)}/>\r\n                <BereichUeberschrift ueberschrift={\"Zu erledigende To-dos\"}/>\r\n                <ContainerListe itemList={this.state.punkt}\r\n                                updatePunkt={(id, title, harken, datum, notizen) => this.updatePunktInState(id, title, harken, datum, notizen)}\r\n                                updateDoneOrNot={(id, harken) => this.updatePunktStrichDoneOrNot(id, harken)}/>\r\n                <BereichUeberschrift ueberschrift={\"Erledigte To-dos\"}/>\r\n                <ContainerListe itemList={this.state.punktErledigt}\r\n                                updatePunkt={(id, title, harken, datum, notizen) => this.updatePunktInState(id, title, harken, datum, notizen)}\r\n                                updateDoneOrNot={(id, harken) => this.updatePunktStrichDoneOrNot(id, harken)}/>\r\n                <div className=\"d-flex flex-row justify-content-center  \">\r\n                    <Button className=\" btn-secondary btn-sm mt-4 mb-4\" onClick={this.deleteAllDoneItems}>Erledigte\r\n                        To-dos\r\n                        löschen</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\n\r\nexport function LocalStorageIdService (){\r\n    let id = localStorage.getItem('IdService');\r\n    console.log(\"lcoalID1: \", id)\r\n    id++; \r\n    console.log(\"lcoalID2: \", id)\r\n\r\n    localStorage.setItem('IdService', id);\r\n    return  id; \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}